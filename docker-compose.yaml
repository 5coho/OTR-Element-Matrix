services:
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    networks:
      - internal
      - external
    depends_on:
      - certbot
      - element
      - synapse
      - synapse-admin
    ports:
      - 8011:80
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/data:/var/www/certbot

  element:
    image: vectorim/element-web:latest
    container_name: element
    restart: always
    networks:
      - internal
    volumes:
      - ./element/element-config.json:/app/config.json

  synapse:
    image: matrixdotorg/synapse:latest
    container_name: synapse
    restart: always
    networks:
      - internal
    volumes:
      - ./matrix:/data

  synapse-admin:
    image: awesometechnologies/synapse-admin
    container_name: synapse-admin
    restart: always
    environment:
      BASE_PATH: "/admin"
    networks:
      - internal
    volumes:
      - ./admin/config.json:/app/config.json

  coturn:
    image: instrumentisto/coturn:latest
    container_name: coturn
    restart: always
    ports:
      - 49160-49200:49160-49200/udp
      - 3478:3478
      - 5349:5349
    networks:
      - internal
      - external
    volumes:
      - ./coturn/turnserver.conf:/etc/coturn/turnserver.conf
  
  certbot:
    container_name: certbot
    image: certbot/certbot:latest
    # command: certonly --webroot -w /var/www/certbot --keep-until-expiring --email ${EMAIL} -d ${DOMAIN} --agree-tos
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/data:/var/www/certbot

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    networks:
      - internal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /root/.docker/config.json:/config.json
    environment:
      WATCHTOWER_CLEANUP: true
      WATCHTOWER_ROLLING_RESTART: true
      WATCHTOWER_SCHEDULE: 0 0 10 * * 1

  # postgres:
  #   image: postgres:16.4-alpine
  #   container_name: postgres
  #   restart: always
  #   volumes:
  #     - ./postgres:/var/lib/postgresql/data
  #   environment:
  #     POSTGRES_PASSWORD: Password
  #     POSTGRES_USER: user
  #     POSTGRES_DB: synapse

networks:
  external:
  internal: